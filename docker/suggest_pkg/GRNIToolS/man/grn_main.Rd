% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grn_main.R
\name{grn_main}
\alias{grn_main}
\title{grn_main
The pipeline of GRNIToolS.}
\usage{
grn_main(
  A = NULL,
  B,
  seq = NULL,
  X = NULL,
  max.steps = 200,
  TF = NULL,
  gene,
  p = FALSE,
  tau = 10,
  cl.cores = 2,
  algorithm = c("Pearson", "ARACNE.a", "CLR"),
  HGSmat,
  file = TRUE,
  verbose = TRUE,
  bootstrap_num = 5,
  bootstrap_seed = TRUE,
  sym = T,
  num = NULL,
  threshold = 0
)
}
\arguments{
\item{A}{Gene expression data of transcriptome factors. Expression matrix (tfs x samples). Every row is a tf, every column is a sample. 
The class of A are required to be 'matrix' and the dimension of matrix A is m * n.}

\item{B}{Gene expression data of target genes. Expression matrix (genes x samples). Every row is a gene, every column is a sample. 
The class of B are required to be 'matrix' and the dimension of matrix B is u * n.}

\item{seq}{Sparsity level of solution. User can input a sequence of sparsity, i.e. 's <- c(1,2,3,4,5)'.}

\item{X}{Gene expression data of Chromatin immunoprecipitation or zero matrix.The class of X are required to be
'matrix' and the dimension of matrix X is u * m.}

\item{max.steps}{Maximum iteration used in calculation. Default: 200.}

\item{TF}{The Transcription Factors (TFs) The default value NULL means that all the genes are used as candidate regulators. Default: NULL.}

\item{gene}{A vector of characters containing the target genes.}

\item{p}{If set to FALSE, this demo aims to use the algorithms in lasso type conveniently.If set to TRUE, this demo aims to use the algorithms in plasso type conveniently(The matrix X must need).Default: FALSE.}

\item{tau}{Tuning parameter of prior lasso (plasso); using cross-validation can get a great one to calculate. The default is 10.}

\item{cl.cores}{The number of cores in computer that you want to utilize. Default: 2.}

\item{algorithm}{The algorithm of inferring grn. We provide 31 algorithms in this function including
'Pearson','Spearman','Kendall','WGCNA','BC3NET','C3NET','parmigene_ARACNE.a','parmigene_ARACNE.m','parmigene_CLR','parmigene_MRNET',
'minet_ARACNE','minet_CLR','minet_MRNET','minet_MRNETB','GeneNet','GENIE3.ET','GENIE3.RF','ENNET,'PCIT','ADMM','ADMMHalf',ADMMHard', 'ITAHalf', 'ITAHard',
'ISTA', 'SPGL0', 'SPGL1', 'CoSaMP', 'OMP', 'FoBa' and 'LARS'. Defaule: c('Pearson','parmigene_ARACNE.a','parmigene_CLR')}

\item{HGSmat}{A matrix which is the high-throughput golden standard. Rows contain genes and columns contain tfs ,the value between in one or zero .}

\item{file}{A connection, or a character string naming the file to write to. The default not save the grn matrix. Default: NULL.}

\item{verbose}{If set to TRUE, a feedback on the progress of the progress of the calculations is given. Default: TRUE.}

\item{bootstrap_num}{Number of the times of resampling with bootstrap method.The number of new datasets.Default: 5.}

\item{bootstrap_seed}{If set to True, set.seed for keeping the results the same for each run. Default: TRUE.}

\item{sym}{If set to TRUE, only the regulatory relationship in the high-throughput gold standard is considered, and the value of 0 is not considered, so that the number of true positive and false positive is equal, and both false negative and true negative are 0.
If set to FALSE, It is assumed that the regulatory relationships that do not exist in the high-throughput gold standard are non regulatory and 0.Default: TRUE.}

\item{num}{The number of gene regulator information. Default: NULL}

\item{threshold}{Between 0 and 1. When the weight is over the threshold, If their weight value is over the threshold, they are considered to have a regulatory relationship, otherwise they are not considered to have regulatory relationship. Default: 0.}
}
\value{
A data.frame with the evaluation parameters of the inferred gene regulatory network.
}
\description{
A framework for benchmarking of gene regulatory network inference. This is the main function to call different algorithms for network inference and evaluate this network.
}
\details{
This is a pipeline for benchmark of gene regulatory network inference and evaluation.Given the expression matrix, gene and high-throughput gold standard, then select the methods from the given network inference methods, and use these methods for network inference and evaluation.
This function provides a bootstrap method, which can repeatedly sample the expression matrix to form multiple new data to evaluate the stability of the inference method of regulatory network.
}
\examples{
ntf <- 30
ngene <- 100
nsample <- 10
set.seed(123)
A <- matrix(rnorm(ntf * nsample,0,1),ntf,nsample)
TF <- paste0('G',1:ntf)
B <- matrix(rnorm(ngene * nsample,0,1),ngene,nsample)
X <- matrix(0,ngene,ntf)
s <-  c(1:10)
gene <- paste0('G',1:ngene)
HGSmat <- matrix(0,ngene,ntf)
colnames(HGSmat) <- TF
rownames(HGSmat) <- gene
HGSmat[sample(ngene * ntf,0.2 * ngene * ntf)] <- 1
algorithm <- c('Pearson','parmigene_ARACNE.a','minet_MRNET','PCIT','ADMM')
conlist <- grn_main(A=A,B=B,X=X,seq = s,gene=gene,TF=TF,algorithm = algorithm,
                    HGSmat = HGSmat,file=TRUE, verbose=TRUE,sym = FALSE)
print(conlist)                  
}
