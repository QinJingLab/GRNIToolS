% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/run_meta.R
\name{run_meta}
\alias{run_meta}
\title{Meta Methods that combine several different algorithms}
\usage{
run_meta(
  A = NULL,
  B,
  s = NULL,
  X = NULL,
  algorithm = c("Pearson", "parmigene_ARACNE.a", "parmigene_CLR"),
  meta = "union",
  max.steps = 200,
  gene,
  TF = NULL,
  p = FALSE,
  tau = 10,
  file = NULL,
  cl.cores = 2
)
}
\arguments{
\item{A}{Gene expression data of transcriptome factors (i.e. basis function in machine learning).
The class of A are required to be 'matrix' and the dimension of matrix A is m * n.}

\item{B}{Gene expression data of target genes (i.e. observation in machine learning).
The class of B are required to be 'matrix' and the dimension of matrix B is u * n.}

\item{s}{Sparsity level of solution. User can input a sequence of sparsity, i.e. 's <- c(1,2,3,4,5)'.}

\item{X}{Gene expression data of Chromatin immunoprecipitation or zero matrix
(i.e. initial iterative point in machine learning).The class of X are required to be
'matrix' and the dimension of matrix X is u * m.}

\item{algorithm}{The algorithm of inferring grn. We provide 31 algorithms in this function including
'Pearson','Spearman','Kendall','WGCNA','BC3NET','C3NET','parmigene_ARACNE.a','parmigene_ARACNE.m','parmigene_CLR','parmigene_MRNET',
'minet_ARACNE','minet_CLR','minet_MRNET','minet_MRNETB','GeneNet','GENIE3.ET','GENIE3.RF','ENNET,'PCIT','ADMM','ADMMHalf',ADMMHard', 'ITAHalf', 'ITAHard',
'ISTA', 'SPGL0', 'SPGL1', 'CoSaMP', 'OMP', 'FoBa' and 'LARS'. Defaule: c('Pearson','parmigene_ARACNE.a','parmigene_CLR')}

\item{meta}{Take the intersection or union of these methods. (union, intersection) Default: union.}

\item{max.steps}{Maximum iteration used in calculation. Default: 200.}

\item{gene}{A vector of characters containing the target genes.}

\item{TF}{The Transcription Factors (TFs) The default value NULL means that all the genes are used as candidate regulators. Default: NULL.}

\item{p}{If set to FALSE, this demo aims to use the algorithms in lasso type conveniently.If set to TRUE, this demo aims to use the algorithms in plasso type conveniently (The matrix X must need).Default: FALSE.}

\item{tau}{Tuning parameter of prior lasso (plasso); using cross-validation can get a great one to calculate. The default is 10.}

\item{file}{A connection, or a character string naming the file to write to. The default not save the grn matrix. Default: NULL.}

\item{cl.cores}{The number of cores in computer that you want to utilize. Default: 2.}
}
\value{
A matrix which is the weighted adjacency matrix of the network inferred by multiple algorithm.
}
\description{
This is the main function to call meta algorithms for network inference.
}
\details{
For the existing gene regulatory network algorithms, select several algorithms, and take the intersection or union of the regulatory network results obtained by these methods to obtain a new regulatory network result.
}
\examples{
A <- matrix(rnorm(200,0,1),20,10)
B <- matrix(rnorm(1000,0,1),100)
X <- matrix(0,100,20)
s <- c(1:10)
TF <- paste0('G',1:20)
gene <- paste0('G',1:100)
algorithm=c('Pearson','parmigene_ARACNE.a','parmigene_CLR','OMP')
grn <- run_meta(A,B,s,X,algorithm,meta='union',
                max.steps = 200,gene,TF = TF,file = NULL,cl.cores=2)
}
